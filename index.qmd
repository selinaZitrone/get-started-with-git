---
title: "Introduction to version control with git"
---

# Workshop Material

You can find all the workshop material on this website.
On top, you can navigate to the presentation slides and the how tos.

<!-- To download presentation slides in pdf format, you can use the following links: -->

<!-- - <a href="./slides/01_01_RStudio.pdf" download> 01 - Introduction RStudio</a> -->

# Workshop Prerequisites

To follow everything we discuss in the workshop you need to prepare a few things:

## 1. Install git on your machine

If you have git already installed, you can skip this step and go to prerequisite 2.

**Windows**

You can download git from [here](https://git-scm.com/download/win)

Download and install the correct version for your machine (probably 64 bit). Use recommended or default settings during the installation. Most options can also be changed
later if you want to.

With the git installation for Windows, you also get a program called `Git bash`. 
Git bash is a terminal application for Windows that provides a Git command line experience.

Open the Git bash application (you can find it searching in the Windows search bar) 
and run the command `git --version`. If the git installation was successful, you should see the version of git that you are using printed to the console.

**Linux (Ubuntu)**

You can install git from the terminal. Run

```
sudo apt-get update
sudo apt-get install git
```

Check the version of git that you have installed with

```
git --version
```

**MacOS**

Some versions of MacOS come with git pre-installed. To check if you already have git, open the terminal and run

```
git --version
```

If the terminal tells you which version of git is installed, you can skip the next steps.

If you need to install git, you can do this with homebrew. Just run

```
brew install git
```

Then check the version and verify the installation with 

```
git --version
```

## 2. Sign up for Github/Gitlab

I will use Github as a remote repository service in the workshop. However, you can also follow 
if you have Gitlab or any other remote repo service.

If you don't use any of these services yet, I suggest to [make a Github account](https://github.com/join) to follow this workshop. However, if your university provides
a self-hosted Gitlab, you might also prefer to use that instead.

Tip: If you sign up for Github with an institutional email address, you will get a free upgrade to Github Pro.
This gives you some additional benefits like private wikis, ... You can always add a second email address later or change it if you leave your institution.

## 3. Set up SSH Authentication

In order to communicate between your local machine and your Github/Gitlab account,
you need to set up authentication via SSH keys.
Please follow the instructions <a href="./how_to_00_ssh_keys.html"> here</a> to do so.


