---
title: "Course preparations"
---

In order to have a smooth workshop start, you need to prepare a few technical things
so you can jump right into using Git on the first day.

# Install Git on your machine

You can find the download and installation guides for all major operating systems
[here](https://git-scm.com/downloads) or you can follow my guide below.
If you have an old version of Git already installed, please make sure to update it
prior to the workshop. You can checkout [this article](https://www.howtogeek.com/759319/how-to-check-and-update-your-git-version/)
that explains how to find your current Git version and how to update to a newer one.

## On Windows

You can download Git from [here](https://git-scm.com/download/win).

Download and install the correct version for your machine (probably 64 bit). Use recommended or default settings during the installation. Most options can also be changed later if you want to.

With the Git installation for Windows, you also get a program called `Git bash`. 
Git bash is a terminal application for Windows that provides a Git command line experience.

Open the Git bash application (you can find it searching in the Windows search bar) 
and run the command `git --version`. If the Git installation was successful, you should see the version of Git that you are using printed to the console.

## On Linux (Ubuntu)

You can install Git from the terminal. Run

```
sudo apt-get update
sudo apt-get install git
```

Check the version of Git that you have installed with

```
git --version
```

## On MacOS

Some versions of MacOS come with Git pre-installed. To check if you already have Git, open the terminal and run

```
git --version
```

If the terminal tells you which version of Git is installed, you can skip the next steps
and check if you can update your current Git installation.

If you need to install Git, you can do this with homebrew. Just run

```
brew install git
```

Then check the version and verify the installation with 

```
git --version
```

# Sign up for Github

I will use Github as a remote repository service in the workshop and you can [create an account here](https://github.com/join). 

Tip: If you sign up for Github with an institutional email address, you will get a free upgrade to Github Pro.
This gives you some additional benefits like private wikis and more. You can always add a second email address later or change it if you leave your institution.

Also, if your institution provides a Gitlab server, you can later switch from
using Github to Gitlab. The workflows are all the same, you just need the account
for this course.

# Install Github Desktop

In the course, I'll be using the Github Desktop application as a graphical user
interface to work with Git.

There are detailed step by step guides on how to install and set up Github Desktop
on the Github Website. Please follow [this guide](https://docs.github.com/en/desktop/installing-and-configuring-github-desktop/installing-and-authenticating-to-github-desktop/setting-up-github-desktop#part-1-installing-github-desktop) and 
do Part 1 (Installing GitHub Desktop) and Part 2 (Configuring your account).



